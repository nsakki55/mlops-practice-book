name: continuous integration

on:
  pull_request:
    branches: [ main ]

jobs:
  python-lint-test:
    name: lint and test for Python project
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.ASSUME_ROLE_ARN }}
          aws-region: "ap-northeast-1"

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version-file: "pyproject.toml"

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          version: "0.6.12"

      - name: Install the project
        run: uv sync --all-extras --dev

      - name: Run formatter check
        run: uv run ruff format src --check

      - name: Run linter
        run: uv run ruff check src

      - name: Run mypy
        run: uv run mypy src

      - name: Run unit test
        run: uv run pytest -m 'not integration and not e2e'

      - name: Setup AWS credentials profile
        run: |
          aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID --profile github-actions
          aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY --profile github-actions
          aws configure set aws_session_token $AWS_SESSION_TOKEN --profile github-actions
          aws configure set region $AWS_REGION --profile github-actions

      - name: Start Docker Compose
        env:
          MODEL_NAME: sgd_classifier_ctr
          MODEL_VERSION: latest
          FEATURE_VERSION: latest
          AWS_PROFILE: github-actions
        run: docker compose up --build -d

      - name: Run integration test
        run: uv run pytest -m integration tests

      - name: Run e2e test
        run: uv run pytest -m e2e tests

      - name: Stop Docker Compose
        if: always()
        run: docker compose down

  terraform-lint:
    name:  Terraform format and validate
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.ASSUME_ROLE_ARN }}
          aws-region: "ap-northeast-1"

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.8

      - name: Run init
        working-directory: terraform
        run: terraform init

      - name: Run formatter check
        working-directory: terraform
        run: terraform fmt -check -recursive

      - name: Run validate
        working-directory: terraform
        run: terraform validate

      - name: Run plan
        working-directory: terraform
        run: terraform plan

