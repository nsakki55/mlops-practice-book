name: continuous deployment

on:
  push:
    branches: [main]

jobs:
  ecr-deploy:
    name: Build and deploy image to ECR
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.ASSUME_ROLE_ARN }}
          aws-region: "ap-northeast-1"

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: mlops-practice
        run: |
          SHORT_SHA=$(git rev-parse --short "$GITHUB_SHA")
          IMAGE_URI=$ECR_REGISTRY/$ECR_REPOSITORY

          docker build -f ./Dockerfile -t $IMAGE_URI:$SHORT_SHA -t $IMAGE_URI:latest . 
          docker push --all-tags $IMAGE_URI

  terraform-deploy:
    name: Apply terraform
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.ASSUME_ROLE_ARN }}
          aws-region: "ap-northeast-1"

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.8

      - name: Run init Terraform
        working-directory: terraform
        run: terraform init

      - name: Run apply
        working-directory: terraform
        run: terraform apply -auto-approve
